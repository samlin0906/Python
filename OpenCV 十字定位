#圖片上點擊後顯示點和座標
#鼠標事件

import cv2

img = cv2.imread("sample.jpg")
data = img.shape
print(data)


def on_EVENT_LBUTTONDOWN(event, x, y, flags, param):                                        
    if event == cv2.EVENT_LBUTTONDOWN:
        xy = "%d,%d" % (x, y)
        print(xy)
        cv2.circle(img, (x, y), 1, (255, 0, 0), thickness = -1)                                         #thickness, 封閉圖形= -1, 填充圖形= 1(default) 
        cv2.putText(img, xy, (x, y), cv2.FONT_HERSHEY_PLAIN,
                    1.0, (0, 0, 0), thickness = 1)
        cv2.imshow("image", img)


cv2.namedWindow("image")
cv2.setMouseCallback("image", on_EVENT_LBUTTONDOWN)
cv2.imshow("image", img)

while True:
    cv2.imshow('image', img)
    if cv2.waitKey(1) & 0xFF == ord('q'):                                            #按q键退出; 64位系统ㄝ, 要加& 0xFF
        break
cv2.destroyAllWindows()


#批次裁減圖檔

import cv2
import os

def cutPicture():

    filelist = os.listdir(path)
    count = 1
    for file in filelist:                                      
        file_path = os.path.join(path, file)
        print(file_path)
        image = cv2.imread(file_path)                          
        cropImg = image[106:431, 213:649]                                                        #裁剪 [y0:y1, x0:x1]
        save_path = "C:/........../KingJet/Picture"
        save_path_file = os.path.join(save_path, str(count) + ".jpg")
        cv2.imwrite(save_path_file, cropImg)                                            
        count = count + 1

path = "C:......./KingJet/Picture"
cutPicture()


#影片檔轉圖檔

import cv2

video_file = "c:/......ocuments/KingJet/Test.mp4"                                     #注意斜線方向
output_file = "c:/......Documents/KingJet/Picture/"                                   #末尾需加斜線

vc = cv2.VideoCapture(video_file)
c = 1
if vc.isOpened():
    rval, frame = vc.read()
else:
    print("open error")
    rval = False

timeF = 100
while rval:
    print(1)
    rval, frame = vc.read()
    if c % timeF == 0:
        print(2)
        cv2.imwrite(output_file + str(int(c / timeF)) + ".jpg", frame)
    c = c + 1
    cv2.waitKey(1)
vc.release()


#尋找圖像中心點 version 1.0

import time

import numpy as np
import cv2

img = cv2.imread('image.jpg')                                               #輸入檔案位置

data = img.shape
# 高度, 寬度, (blue, green, red)
print(data)
print(type(data[0]))
new_img = img
for i in range(data[0]):
    for j in range(data[1]):
        if new_img[i, j, 0] > 0 and new_img[i, j, 2] > 100:                          
            new_img[i, j, 0] = 255                                                    #圖像二值化; void cvThreshold
            new_img[i, j, 1] = 255
            new_img[i, j, 2] = 255
        else:
            new_img[i, j] = [0, 0, 0]
high = []
count = 0
for i in range(data[0]):
    for j in range(data[1]):

        if new_img[i, j, 0] == 255 and new_img[i, j, 1] == 255 and new_img[i, j, 2] == 255:
            count = i
            break
    if count > 0:
        break
high.append(count)
count = 0
for i in range(data[0]):
    for j in range(data[1]):
        h = data[0] - i - 1
        # print(h, j)
        if new_img[h, j, 0] == 255 and new_img[h, j, 1] == 255 and new_img[h, j, 2] == 255:
            count = h

            break
    if count > 0:
        break

high.append(count)
print("high=", high)

width = []
count = 0
for i in range(data[1]):
    for j in range(data[0]):
        if new_img[i, j, 0] == 255 and new_img[i, j, 1] == 255 and new_img[i, j, 2] == 255:
            count = i
            break
    if count > 0:
        break
width.append(count)
count = 0
for i in range(data[1]):
    for j in range(data[0]):
        w = data[1] - i - 1
        # print(h, j)
        if new_img[j, w, 0] == 255 and new_img[j, w, 1] == 255 and new_img[j, w, 2] == 255:
            count = w

            break
    if count > 0:
        break

width.append(count)
print("width=", width)
print("center=", "X=", int((width[0] + width[1]) / 2), "Y=", int((high[0] + high[1]) / 2))
cv2.imwrite('output.jpg', new_img)


#尋找圖像中心點 version 1.1

import time

import numpy as np
import cv2

img = cv2.imread('image_0.jpg')

data = img.shape                                                                  #高度, 寬度, (blue, green, red)
print(data)

new_img = img
for i in range(data[0]):
    for j in range(data[1]):
        if new_img[i, j, 0] > 0 and new_img[i, j, 2] > 100:
            new_img[i, j, 0] = 255
            new_img[i, j, 1] = 255
            new_img[i, j, 2] = 255
        else:
            new_img[i, j] = [0, 0, 0]

high = []
count = 0
line = 0
for i in range(data[0]):
    for j in range(data[1]):
        if new_img[i, j, 0] == 255 and new_img[i, j, 1] == 255 and new_img[i, j, 2] == 255:
            count = i
            line = line + 1
            break
    if line >= 5:
        break
high.append(count)
count = 0
line = 0
for i in range(data[0]):
    for j in range(data[1]):
        h = data[0] - i - 1
        # print(h, j)
        if new_img[h, j, 0] == 255 and new_img[h, j, 1] == 255 and new_img[h, j, 2] == 255:
            count = h
            line = line + 1
            break
    if line >= 5:
        break

high.append(count)
print("high=", high)

width = []
count = 0
line = 0
for i in range(data[1]):
    for j in range(data[0]):
        if new_img[j, i, 0] == 255 and new_img[j, i, 1] == 255 and new_img[j, i, 2] == 255:
            count = i
            line = line + 1
            break
    if line >= 5:
        break
width.append(count)
count = 0
line = 0
for i in range(data[1]):
    for j in range(data[0]):
        w = data[1] - i - 1
        # print(h, j)
        if new_img[j, w, 0] == 255 and new_img[j, w, 1] == 255 and new_img[j, w, 2] == 255:
            count = w

            line = line + 1
            break
    if line >= 5:
        break

width.append(count)
print("width=", width)
print("center=", "X=", int((width[0] + width[1]) / 2), "Y=", int((high[0] + high[1]) / 2))

for i in range(data[1]):
    y = int((high[0] + high[1]) / 2)
    new_img[y, i, 0] = 255
    new_img[y, i, 1] = 255
    new_img[y, i, 2] = 0
for i in range(data[0]):
    x = int((width[1] + width[0]) / 2)
    # x = int(width[0])
    new_img[i, x, 0] = 255
    new_img[i, x, 1] = 255
    new_img[i, x, 2] = 0

cv2.imwrite('output.jpg', new_img)
