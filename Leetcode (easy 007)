#007
#不使用rstrip(), lstrip(), abs()

class Solution:
    def reverse(self, x: int) -> int:
        
        remainder = x % 10                #驗證末碼是否為0
        str_x = str(x)
        if 2 ** 31 > x > 0:
            if remainder != 0:
                str_x = str_x[::-1]
            elif remainder == 0:
                str_x = str_x[::-1]
                for i in range(len(str_x)):
                    if int(str_x[i]) > 0:         #確認只刪除前面為0
                        str_x = str_x[i:]
                        break
            if int(str_x) < 2 ** 31:
                return str_x
            else:
                return 0
        elif -2 ** 31 < x < 0:
            str_x = str_x[1:]
            if remainder != 0:
                str_x = int(str_x[::-1]) * -1
            elif remainder == 0:
                str_x = str_x[::-1]
                for i in range(len(str_x)):
                    if int(str_x[i]) > 0:
                        str_x = str_x[i:]
                        break
                str_x = int(str_x) * -1
            if int(str_x) > -2 ** 31:
                return str_x
            else:
                return 0
        else:
            return 0               #防呆

#014
#縱向掃描

class Solution(object):
    def longestCommonPrefix(strs):

        length = len(strs)
        if length == 0:
            return ""

        index_length = len(strs[0])
        for i in range(index_length):
            for j in range(1, length):
                if i == len(strs[j]) or strs[0][i] != strs[j][i]:         #排除法,如果string不相同的話; index_sting的length有可能不是最小,因此需設i == len(strs[j])
                    return strs[0][:i]

        return strs[0]

#020
#Valid Parentheses
#stack

class Solution(object):
    def isValid(s):

        length = len(s)
        if length % 2 != 0: 
            return False

        dict = {"(": ")", "[": "]", "{": "}"}
        stack = []
        keys = dict.keys()
        for i in s:
            if i in keys:
                stack.append(i)
            else:
                if stack == []:                        #輸入值如果沒在dict的key的話, eg.)}
                    return False
                ch = stack.pop()
                if i != dict[ch]:
                    return False
        return stack == []                             #輸入值如果為空的話,判定True
